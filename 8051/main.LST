C51 COMPILER V7.08   MAIN                                                                  06/09/2024 19:47:19 PAGE 1   


C51 COMPILER V7.08, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h> //包含標頭檔
   2          #include <stdlib.h>
   3          #include <string.h>
   4          #include "uart.h"
   5          #include "delay.h"
   6          #include "keyscan.h"
   7          typedef unsigned char byte;
   8          typedef unsigned int  word;
   9          
  10          #define DataPort P0 //定義資料埠 
  11          #define KeyPort P1      //定義鍵盤埠
  12          sbit k1 = P3 ^ 0;
  13          sbit k2 = P3 ^ 1;
  14          sbit LATCH1 = P3 ^ 7;   //定義鎖存使能埠 段鎖存
  15          sbit LATCH2 = P3 ^ 6;   //              位鎖存
  16          
  17          unsigned char code dofly_DuanMa[] = { 0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,
  18                                                                                    0x77,0x7c,0x39,0x5e,0x79,0x71 };      // 段碼0~F
  19          unsigned char code dofly_WeiMa[] = { 0xfe,0xfd,0xfb,0xf7,0xef,0xdf,0xbf,0x7f };//位碼
  20          byte TempData[8];
  21          word mynum[5], myLife, oppoLife;
  22          bit catchable = 0;
  23          
  24          // state
  25          #define WAIT 0
  26          #define PREPARE 1
  27          #define GUESS 2
  28          #define END 3
  29          
  30          /*------------------------------------------------
  31                                  顯示函數，用於動態掃瞄數碼管
  32          ------------------------------------------------*/
  33          void Display(unsigned char FirstBit, unsigned char Num) {
  34   1              static unsigned char i = 0;
  35   1              DataPort = 0;   //清空資料，防止有交替重影
  36   1              LATCH1 = 1;     //段鎖存
  37   1              LATCH1 = 0;
  38   1              DataPort = dofly_WeiMa[i + FirstBit]; //取位碼 
  39   1              LATCH2 = 1;     //位鎖存
  40   1              LATCH2 = 0;
  41   1              DataPort = TempData[i]; //取顯示資料，段碼
  42   1              LATCH1 = 1;     //段鎖存
  43   1              LATCH1 = 0;
  44   1              i++;
  45   1              if (i == Num)
  46   1                      i = 0;
  47   1      }
  48          /*------------------------------------------------
  49                                          計時器初始化副程式
  50          ------------------------------------------------*/
  51          void Init_Timer0(void) {
  52   1              TMOD |= 0x01;//使用模式1，16位元計時器，使用"|"符號可以在使用多個計時器時不受
             -影響
  53   1              EA = 1;      //總中斷打開
  54   1              ET0 = 1;     //計時器中斷打開
C51 COMPILER V7.08   MAIN                                                                  06/09/2024 19:47:19 PAGE 2   

  55   1              TR0 = 1;     //計時器開關打開
  56   1      }
  57          /*------------------------------------------------
  58                                           計時器中斷副程式
  59          ------------------------------------------------*/
  60          void Timer0_isr(void) interrupt 1
  61          {
  62   1              TH0 = (65536 - 2000) / 256;               //重新賦值 2ms
  63   1              TL0 = (65536 - 2000) % 256;
  64   1              Display(0, 8);       // 調用數碼管掃瞄
  65   1              TF1 = 0;
  66   1      }
  67          
  68          char itoc(word x) {//int to char
  69   1              if (x == 10) return 'A';
  70   1              else return x + '0';
  71   1      }
  72          int ctoi(char x) {//char to int
  73   1              if (x == 'A') return 10;
  74   1              else return x - '0';
  75   1      }
  76          
  77          byte wait_input(word x) {//等待輸入
  78   1              byte key;
  79   1              key = KeyPro();
  80   1              while (key == 0xff) {
  81   2                      TempData[x] = TempData[x] ^ 0x80;
  82   2                      key = KeyPro();
  83   2                      DelayMs(30);
  84   2              }
  85   1              TempData[x] = TempData[x] & 0x7f;
  86   1              return key;
  87   1      }
  88          void clearData() {//清屏
  89   1              word i;
  90   1              for (i = 0;i < 8;i++) TempData[i] = 0;
  91   1      }
  92          void switch_show() {
  93   1              word i;
  94   1              byte key, temp[8];
  95   1              for (i = 0;i < 8;i++) temp[i] = TempData[i]; //儲存
  96   1              clearData();//清屏
  97   1              TempData[0] = dofly_DuanMa[mynum[0]];
  98   1              TempData[1] = dofly_DuanMa[mynum[1]];
  99   1              TempData[2] = dofly_DuanMa[mynum[2]];
 100   1              TempData[3] = dofly_DuanMa[mynum[3]];
 101   1              TempData[4] = dofly_DuanMa[mynum[4]];
 102   1              TempData[7] = dofly_DuanMa[myLife];
 103   1              key = wait_input(7);
 104   1              while (key != 13) key = wait_input(7);
 105   1              for (i = 0;i < 8;i++) TempData[i] = temp[i]; //還原
 106   1      }
 107          
 108          void main(void) {
 109   1              char guess[5];
 110   1              byte key;
 111   1              word state = PREPARE, guess_cnt = 0, guess_num = 0;
 112   1              word oppo_guess_cnt = 0, oppo_guess_num = 1;
 113   1              myLife = 3, oppoLife = 3;
 114   1              InitUART();
 115   1              Init_Timer0();
 116   1              ES = 1;// 打開串口中斷
C51 COMPILER V7.08   MAIN                                                                  06/09/2024 19:47:19 PAGE 3   

 117   1              while (1) {
 118   2                      if (state == PREPARE) {
 119   3                              key = wait_input(7);
 120   3                              while (key != 16) key = wait_input(7);
 121   3                              UART_SendStr("READY");// 準備完成
 122   3                              state = WAIT;
 123   3                      }
 124   2                      else if (state == WAIT) {// 等待UART輸入
 125   3                              if (TempData[0] != 0x38) {
 126   4                                      clearData();//清屏
 127   4                                      // 顯示LOAd...
 128   4                                      TempData[0] = 0x38, TempData[1] = 0x3f;
 129   4                                      TempData[2] = 0x77, TempData[3] = 0x5e;
 130   4                                      TempData[4] = 0x80, TempData[5] = 0x80;
 131   4                                      TempData[6] = 0x80;
 132   4                              }
 133   3                              if (rec_flag == 1) {// UART輸入
 134   4                                      clearData();//清屏
 135   4                                      buf[head] = '\0';
 136   4                                      if (buf[0] == 'W') {// 猜對
 137   5                                              // 顯示TrUE
 138   5                                              TempData[0] = 0x78, TempData[1] = 0x50;
 139   5                                              TempData[2] = 0x3e, TempData[3] = 0x79;
 140   5                                              state = PREPARE;
 141   5                                      }
 142   4                                      else if (buf[0] == 'L') {// 猜錯
 143   5                                              // 顯示FALSE
 144   5                                              TempData[0] = 0x71, TempData[1] = 0x77;
 145   5                                              TempData[2] = 0x38, TempData[3] = 0x6d;
 146   5                                              TempData[4] = 0x79;
 147   5                                              state = PREPARE;
 148   5                                      }
 149   4                                      else if (buf[0] == 'G') {// 每輪結束
 150   5                                              // 顯示End  X-Y
 151   5                                              myLife = ctoi(buf[5]);
 152   5                                              oppoLife = ctoi(buf[6]);
 153   5                                              TempData[0] = 0x79, TempData[1] = 0x54;
 154   5                                              TempData[2] = 0x5e, TempData[5] = dofly_DuanMa[ctoi(buf[5])];
 155   5                                              TempData[6] = 0x40, TempData[7] = dofly_DuanMa[ctoi(buf[6])];
 156   5                                              if (ctoi(buf[5]) <= 0 || ctoi(buf[6]) <= 0)state = END;
 157   5                                              else state = PREPARE;
 158   5                                      }
 159   4                                      else if (buf[0] == 'T') {// 輪到我猜
 160   5                                              oppo_guess_cnt = 0, oppo_guess_num = 1;
 161   5                                              state = GUESS;
 162   5                                      }
 163   4                                      else if (buf[0] == 'O') {// 接收對方猜「X個Y」
 164   5                                              // 顯示OPPO X Y
 165   5                                              TempData[0] = 0x3f, TempData[1] = 0x73;
 166   5                                              TempData[2] = 0x73, TempData[3] = 0x3f;
 167   5                                              oppo_guess_cnt = ctoi(buf[5]), oppo_guess_num = ctoi(buf[6]);
 168   5                                              TempData[5] = dofly_DuanMa[oppo_guess_cnt];
 169   5                                              TempData[7] = dofly_DuanMa[oppo_guess_num];
 170   5                                              key = wait_input(7);
 171   5                                              while (key != 16) key = wait_input(7);
 172   5                                              clearData();//清屏
 173   5                                              catchable = 1;//可以抓
 174   5                                              state = GUESS;
 175   5                                      }
 176   4                                      else {// 得到我的數字
 177   5                                              // 顯示我的數字
 178   5                                              mynum[0] = ctoi(buf[0]);
C51 COMPILER V7.08   MAIN                                                                  06/09/2024 19:47:19 PAGE 4   

 179   5                                              mynum[1] = ctoi(buf[1]);
 180   5                                              mynum[2] = ctoi(buf[2]);
 181   5                                              mynum[3] = ctoi(buf[3]);
 182   5                                              mynum[4] = ctoi(buf[4]);
 183   5                                              TempData[0] = dofly_DuanMa[mynum[0]];
 184   5                                              TempData[1] = dofly_DuanMa[mynum[1]];
 185   5                                              TempData[2] = dofly_DuanMa[mynum[2]];
 186   5                                              TempData[3] = dofly_DuanMa[mynum[3]];
 187   5                                              TempData[4] = dofly_DuanMa[mynum[4]];
 188   5                                              state = PREPARE;
 189   5                                      }
 190   4                                      rec_flag = 0;
 191   4                                      head = 0;
 192   4                              }
 193   3                      }
 194   2                      else if (state == GUESS) {// 猜測階段
 195   3                              while (state == GUESS) {
 196   4                                      if (TempData[0] != 0x6f) {
 197   5                                              clearData();
 198   5                                              // 顯示GUESS 
 199   5                                              TempData[0] = 0x6f, TempData[1] = 0x3e;
 200   5                                              TempData[2] = 0x79, TempData[3] = 0x6d;
 201   5                                              TempData[4] = 0x6d;
 202   5                                      }
 203   4                                      key = KeyPro();
 204   4                                      if (key >= 1 && key <= 10) {
 205   5                                              while (key != 16) {
 206   6                                                      if (key >= 1 && key <= 10) guess_cnt = key;
 207   6                                                      else if (key == 13) switch_show();
 208   6                                                      TempData[5] = dofly_DuanMa[guess_cnt];
 209   6                                                      key = KeyPro();
 210   6                                                      while (key == 0xff) key = wait_input(5);
 211   6                                              }
 212   5                                              TempData[6] = 0x40;
 213   5                                              key = KeyPro();
 214   5                                              while (!(key >= 1 && key <= 6)) {
 215   6                                                      key = KeyPro();
 216   6                                                      if (key == 13) switch_show();
 217   6                                              }
 218   5                                              while (key != 16) {
 219   6                                                      if (key >= 1 && key <= 6) guess_num = key;
 220   6                                                      else if (key == 13) switch_show();
 221   6                                                      TempData[7] = dofly_DuanMa[guess_num];
 222   6                                                      key = wait_input(7);
 223   6                                                      while (key == 0xff) key = wait_input(7);
 224   6                                              }
 225   5                                              guess[0] = itoc(guess_cnt);
 226   5                                              guess[1] = itoc(guess_num);
 227   5                                              guess[2] = '\0';
 228   5                                              if ((guess_cnt == oppo_guess_cnt && guess_num <= oppo_guess_num) || (guess_cnt < oppo_guess_cnt)) {
 229   6                                                      //顯示Error
 230   6                                                      TempData[0] = 0x79, TempData[1] = 0x50;
 231   6                                                      TempData[2] = 0x50, TempData[3] = 0x5c;
 232   6                                                      TempData[4] = 0x50;
 233   6                                                      key = wait_input(7);
 234   6                                                      while (key != 16) key = wait_input(7);
 235   6                                                      clearData();
 236   6                                                      // 顯示OPPO X Y
 237   6                                                      TempData[0] = 0x3f, TempData[1] = 0x73;
 238   6                                                      TempData[2] = 0x73, TempData[3] = 0x3f;
 239   6                                                      oppo_guess_cnt = ctoi(buf[5]), oppo_guess_num = ctoi(buf[6]);
 240   6                                                      TempData[5] = dofly_DuanMa[oppo_guess_cnt];
C51 COMPILER V7.08   MAIN                                                                  06/09/2024 19:47:19 PAGE 5   

 241   6                                                      TempData[7] = dofly_DuanMa[oppo_guess_num];
 242   6                                                      key = wait_input(7);
 243   6                                                      while (key != 16) key = wait_input(7);
 244   6                                                      continue;
 245   6                                              }
 246   5                                              UART_SendStr(guess);// 傳送猜測
 247   5                                              state = WAIT;
 248   5                                      }
 249   4                                      else if (key == 16 && catchable) {// 抓
 250   5                                              UART_SendStr("STOP");
 251   5                                              catchable = 0;
 252   5                                              state = WAIT;
 253   5                                      }
 254   4                                      else if (key == 13) switch_show();
 255   4                              }
 256   3                      }
 257   2                      else if (state == END) {
 258   3                              key = wait_input(7);
 259   3                              while (key == 0xff) key = wait_input(7);
 260   3                              state = PREPARE;
 261   3                              if (key == 16) clearData();// 清屏
 262   3                              else break;
 263   3                      }
 264   2                      DelayMs(10);
 265   2              }
 266   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1267    ----
   CONSTANT SIZE    =     35    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     23      29
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
